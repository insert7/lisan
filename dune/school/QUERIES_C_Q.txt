

SELECT S.*, SS.SEM, SS.SEC
FROM STUDENT S, SEMSEC SS, CLASS C
WHERE S.USN = C.USN AND
SS.SSID = C.SSID AND
SS.SEM = 4 AND SS.SEC='C';


SELECT SS.SEM, SS.SEC, S.GENDER, COUNT(S.GENDER) AS COUNT
FROM STUDENT S, SEMSEC SS, CLASS C
WHERE S.USN = C.USN AND
SS.SSID = C.SSID
GROUP BY SS.SEM, SS.SEC, S.GENDER
ORDER BY SEM;


CREATE VIEW STU_TEST1_MARKS_V
AS
SELECT TEST1, SUBCODE
FROM IAMARKS
WHERE USN = '1BI15CS101';

SELECT * FROM STUDENT_TEST1_MARKS_V;


4TH QUERY:

DELIMITER //
CREATE PROCEDURE AVG_MARKS()
BEGIN
    DECLARE done INT DEFAULT FALSE;
    DECLARE C_A INTEGER;
    DECLARE C_B INTEGER;
    DECLARE C_SUM INTEGER;
    DECLARE C_AVG INTEGER;
    DECLARE C_USN VARCHAR(10);
    DECLARE C_SUBCODE VARCHAR(8);
    DECLARE C_SSID VARCHAR(5);

    -- Declare Cursor Variables
    DECLARE cur CURSOR FOR
        SELECT GREATEST(TEST1, TEST2) AS A, GREATEST(TEST1, TEST3) AS B, GREATEST(TEST3, TEST2) AS C, USN, SUBCODE, SSID
        FROM IAMARKS
        WHERE FINALIA IS NULL
        FOR UPDATE;

    -- Declare Exit Handler
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

    OPEN cur;

    FETCH_LOOP: LOOP
        FETCH cur INTO C_A, C_B, C_SUM, C_USN, C_SUBCODE, C_SSID;
        IF done THEN
            LEAVE FETCH_LOOP;
        END IF;
        
        IF C_A != C_B THEN
            SET C_SUM = C_A + C_B;
        ELSE
            SET C_SUM = C_A + C_SUM;
        END IF;

        SET C_AVG = C_SUM / 2;

        UPDATE IAMARKS 
        SET FINALIA = C_AVG 
        WHERE USN = C_USN AND SUBCODE = C_SUBCODE AND SSID = C_SSID;

    END LOOP FETCH_LOOP;

    CLOSE cur;
END;
//

DELIMITER ;

UPDATE IAMARKS
SET FinalIA = GREATEST((Test1 + Test2), (Test2 + Test3), (Test1 + Test3)) / 2;

SELECT S.USN,S.SNAME,S.ADDRESS,S.PHONE,S.GENDER, IA.SUBCODE,
(CASE
WHEN IA.FINALIA BETWEEN 17 AND 20 THEN 'OUTSTANDING'
WHEN IA.FINALIA BETWEEN 12 AND 16 THEN 'AVERAGE'
ELSE 'WEAK'
END) AS CAT
FROM STUDENT S, SEMSEC SS, IAMARKS IA, SUBJECT SUB
WHERE S.USN = IA.USN AND
SS.SSID = IA.SSID AND
SUB.SUBCODE = IA.SUBCODE AND
SUB.SEM = 8;


DROP PROCEDURE IF EXISTS AVG_MARKS;
